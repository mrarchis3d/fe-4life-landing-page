---
import Layout from '../layouts/Layout.astro';
import MetodosPago from '../components/MetodosPago';
import Feature from '@/components/Feature';
import BGImage from '@/components/BgImage';
import { getProducts } from '@/data/products';
import Card from '@/components/Card';
import Promotion from '@/components/Promotion.astro';
---

<Layout title="Welcome to 4Life Shop.">
  <main class="mx-auto max-w-7xl py-12 lg:py-24">
    <BGImage client:only="react" />
    <!-- <Alert /> -->
    <h1 class="font-extrabold text-zinc-800 text-2xl mt-12">
      <span class="text-gradient">4life Shop</span>
    </h1>
    <p class="instructions">
      Encuentra todos los productos de 4Life que necesites aquí.<br />
      <strong>Comuníquese con nosotros:</strong>
      Reciba los mejores descuentos de nuestros productos
    </p>
    <ul role="list" class="link-card-grid">
      {
        getProducts()
          .slice(0, 3)
          .map((product) => (
            <Card
              code={product.code}
              client:only="react"
              url={product.url}
              image={product.image}
              title={product.title}
              description={product.description}
              price={product.price}
              prevPrice={product.prevPrice}
              saving={product.saving}
            />
          ))
      }
    </ul>
  </main>
  <MetodosPago client:only="react" />
  <Promotion
    image="loyalty-program.jpg"
    title=""
    description="COMIENZA A RECIBIR PRODUCTOS ¡HOY MISMO!"
    features={[
      'Únete al Programa de Lealtad de 4Life® y empieza a recibir tus productos favoritos cada mes, al solicitar tu orden de Lealtad.',
      'Hasta un 15% en Puntos Redimibles para canjear por tus productos favoritos. Puedes obtener un máximo de 75 puntos al mes!',
      'Canjea tus Puntos por productos 4Life de tu elección.',
      'Recibirás un Producto de Lealtad del Mes, si mantienes tu orden mensual de 125 LP o más con el ¡Programa de Lealtad!',
    ]}
  />
  <Feature />
</Layout>

<style>
  main {
    margin: auto;
    padding: 1.5rem;
    /* max-width: 60ch; */
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    line-height: 1.6;
    margin: 2rem 0;
    border: 1px solid rgba(var(--accent), 25%);
    background-color: white;
    padding: 1rem;
    border-radius: 0.4rem;
  }
  .instructions code {
    font-size: 0.875em;
    font-weight: bold;
    background: rgba(var(--accent), 12%);
    color: rgb(var(--accent));
    border-radius: 4px;
    padding: 0.3em 0.45em;
  }
  .instructions strong {
    color: rgb(var(--accent));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 1rem;
    padding: 0;
  }
</style>
../components/Card.tsx
